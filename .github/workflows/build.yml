# 工作流的名称
name: Flutter 安卓构建流程

# 触发此工作流的事件
on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]
  workflow_dispatch:

jobs:
  build:
    # 指定任务运行的虚拟机环境
    runs-on: ubuntu-latest

    # 任务的执行步骤
    steps:
      # 第 1 步：检出你的代码
      - name: 检出代码
        uses: actions/checkout@v4

      # 第 2 步：设置 Java 环境 (Flutter 构建安卓包需要)
      - name: 设置 JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # 第 3 步：设置 Flutter 环境
      # 这是最关键的一步，使用 subosito/flutter-action 来安装 Flutter SDK
      # 你可以在 with.flutter-version 中指定需要的 Flutter 版本
      - name: 设置 Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.x' # 可以指定具体版本，例如 '3.13.9'，或使用 '3.x' 匹配最新的 3.x 版本
          channel: 'stable'      # 指定使用的 Flutter 频道
          cache: true            # 启用缓存以加速后续构建

      # 第 4 步：获取 Flutter 依赖包
      - name: 获取依赖
        run: flutter pub get

      # 第 5 步：执行构建
      # 运行 'flutter build apk' 命令，并使用 '--release' 标志来构建发布版
      - name: 构建 APK
        run: flutter build apk --release

      # 第 6 步：上传构建好的 APK 文件
      # Flutter 构建的 APK 路径与原生安卓不同
      - name: 上传 APK 文件
        uses: actions/upload-artifact@v4
        with:
          name: app-release.apk
          path: build/app/outputs/flutter-apk/app-release.apk
        
